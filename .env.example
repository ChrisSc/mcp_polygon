# Polygon.io API Key (required)
# Get your API key from: https://polygon.io/dashboard/api-keys
POLYGON_API_KEY=your_api_key_here

# MCP Transport Mode
# - stdio: Standard input/output (default, for local testing and unit tests)
# - sse: Server-Sent Events over HTTP
# - streamable-http: Streamable HTTP (newest, recommended for Docker)
MCP_TRANSPORT=stdio

# HTTP Transport Configuration (only used when MCP_TRANSPORT is sse or streamable-http)
# Host to bind to:
#   - 0.0.0.0: All interfaces (use in Docker container for host accessibility)
#   - 127.0.0.1: Localhost only (use for local testing)
FASTMCP_HOST=127.0.0.1

# Port to listen on
FASTMCP_PORT=8000

# API endpoint path (default: /mcp)
# FASTMCP_STREAMABLE_HTTP_PATH=/mcp

# Security Settings (configured by default in server.py - uncomment only to override)
# These settings provide DNS rebinding protection as required by MCP specification
# FASTMCP_TRANSPORT_SECURITY__ENABLE_DNS_REBINDING_PROTECTION=true
# FASTMCP_TRANSPORT_SECURITY__ALLOWED_HOSTS=localhost:8000,127.0.0.1:8000,0.0.0.0:8000
# FASTMCP_TRANSPORT_SECURITY__ALLOWED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# Docker Configuration Notes
# -------------------------
# When running in Docker with HTTP transport (streamable-http):
#
# 1. Server Endpoint: http://localhost:8000/mcp
#    - Accessible from host machine at localhost:8000
#    - Binds to 0.0.0.0 inside container for Docker networking
#    - Port mapping: 127.0.0.1:8000:8000 (localhost-only on host)
#
# 2. Required Headers for HTTP Clients:
#    - Accept: application/json, text/event-stream
#    - Content-Type: application/json
#
# 3. Container Security:
#    - Read-only filesystem (tmpfs mounts for /tmp and /root/.cache)
#    - No new privileges (no-new-privileges:true)
#    - Dropped capabilities (only NET_BIND_SERVICE)
#    - Localhost-only binding on host (127.0.0.1:8000:8000)
#
# 4. Tested and Verified:
#    - ✅ 81 tools available
#    - ✅ MCP protocol v2024-11-05
#    - ✅ End-to-end tool calls working
#    - ✅ DNS rebinding protection enabled
#
# See docker-compose.yml for full configuration
